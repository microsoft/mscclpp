{
    "name": "MSCCL++ Dev Container",
    "build": {
        "dockerfile": "Dockerfile",
        "args": {
            // For NVIDIA
            "BASE_IMAGE": "ghcr.io/microsoft/mscclpp/mscclpp:base-dev-cuda12.8",
            // For AMD
            // "BASE_IMAGE": "ghcr.io/microsoft/mscclpp/mscclpp:base-dev-rocm6.2",
            "USERNAME": "devuser",
            "SSH_PORT": "22345"
        }
    },
    "remoteUser": "devuser",
    "containerEnv": {
        "LC_ALL": "C",
        "LANG": "C",
        "LANGUAGE": "C"
    },
    "customizations": {
        "vscode": {
            "extensions": [
                // Python
                "ms-python.python",
                "ms-python.vscode-pylance",
                // C++
                "ms-vscode.cpptools",
                "ms-vscode.cpptools-extension-pack",
                "ms-vscode.cmake-tools"
            ],
            "settings": {
                "terminal.integrated.defaultProfile.linux": "bash",
                "C_Cpp.default.includePath": [
                    "${workspaceFolder}/**",
                    "/usr/local/cuda/include",
                    "/usr/include"
                ],
                "C_Cpp.default.compilerPath": "/usr/bin/gcc",
                "C_Cpp.default.cStandard": "c17",
                "C_Cpp.default.cppStandard": "c++17",
                "C_Cpp.default.intelliSenseMode": "linux-gcc-x64"
            }
        }
    },
    "privileged": true,
    "runArgs": [
        "--net=host",
        "--ipc=host",
        "--ulimit=memlock=-1:-1",
        // For NVIDIA
        "--gpus=all"
        // For AMD
        // "--security-opt=seccomp=unconfined",
        // "--group-add=video"
    ],
    "workspaceFolder": "/home/devuser/mscclpp",
    "workspaceMount": "source=${localWorkspaceFolder},target=/home/devuser/mscclpp,type=bind,consistency=cached",
    "postStartCommand": "sudo service ssh start",
    "postCreateCommand": "mkdir -p /tmp/mscclpp-build && cd /tmp/mscclpp-build && cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr -DMSCCLPP_BUILD_PYTHON_BINDINGS=OFF /home/devuser/mscclpp && make -j$(nproc) && sudo make install/fast && rm -rf /tmp/mscclpp-build"
}
