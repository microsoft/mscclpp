trigger:
- main

pr:
  branches:
    include:
    - main
  drafts: false

jobs:
- job: UnitTest
  timeoutInMinutes: 30
  pool:
    name: mscclpp
  strategy:
    matrix:
      cuda11:
        containerImage: ghcr.io/microsoft/mscclpp/mscclpp:base-cuda11.8
      cuda12:
        containerImage: ghcr.io/microsoft/mscclpp/mscclpp:base-cuda12.1

  container:
    image: $[ variables['containerImage'] ]
    options: --privileged --ipc=host --gpus=all --ulimit memlock=-1:-1

  steps:
  - task: Bash@3
    name: Build
    displayName: Build
    inputs:
      targetType: 'inline'
      script: |
        curl -L -C- https://github.com/Kitware/CMake/releases/download/v3.26.4/cmake-3.26.4-linux-x86_64.tar.gz -o /tmp/cmake-3.26.4-linux-x86_64.tar.gz
        tar xzf /tmp/cmake-3.26.4-linux-x86_64.tar.gz -C /tmp
        mkdir build && cd build
        MPI_HOME=/usr/local/mpi /tmp/cmake-3.26.4-linux-x86_64/bin/cmake -DCMAKE_BUILD_TYPE=Release ..
        make -j
      workingDirectory: '$(System.DefaultWorkingDirectory)'

  - task: Bash@3
    name: LockGPUClock
    displayName: Lock GPU clock frequency
    inputs:
      targetType: 'inline'
      script: |
        sudo nvidia-smi -pm 1
        for i in $(seq 0 $(( $(nvidia-smi -L | wc -l) - 1 ))); do
          sudo nvidia-smi -ac $(nvidia-smi --query-gpu=clocks.max.memory,clocks.max.sm --format=csv,noheader,nounits -i $i | sed 's/\ //') -i $i
        done
      workingDirectory: '$(System.DefaultWorkingDirectory)'

  - task: Bash@3
    name: UnitTests
    displayName: Run mscclpp unit tests
    inputs:
      targetType: 'inline'
      script: |
        ./build/test/unit_tests
      workingDirectory: '$(System.DefaultWorkingDirectory)'

  - task: Bash@3
    name: MpUnitTests
    displayName: Run mscclpp multi-process unit tests
    inputs:
      targetType: 'inline'
      script: |
        set -e
        export PATH=/usr/local/mpi/bin:$PATH
        mpirun -tag-output -np 2 ./build/test/mp_unit_tests
        mpirun -tag-output -np 4 ./build/test/mp_unit_tests
        mpirun -tag-output -np 8 ./build/test/mp_unit_tests
      workingDirectory: '$(System.DefaultWorkingDirectory)'

  - task: Bash@3
    name: PyTests
    displayName: Run pytests
    inputs:
      targetType: 'inline'
      script: |
        set -e
        export PATH=/usr/local/mpi/bin:$PATH
        cd build && make pylib-copy
        if [[ '$(containerImage)' == *'cuda11'* ]]; then
          pip3 install -r ../python/requirements_cu11.txt
        else
          pip3 install -r ../python/requirements_cu12.txt
        fi
        mpirun -tag-output -x MSCCLPP_HOME=$(System.DefaultWorkingDirectory) -np 8 ~/.local/bin/pytest ../python/test/test_mscclpp.py -x
      workingDirectory: '$(System.DefaultWorkingDirectory)'
