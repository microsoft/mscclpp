trigger:
- main

pr:
  branches:
    include:
    - main
  drafts: false

jobs:
- job: UnitTest
  timeoutInMinutes: 30
  pool:
    name: mscclpp
  strategy:
    matrix:
      cuda11:
        containerImage: ghcr.io/microsoft/mscclpp/mscclpp:base-dev-cuda11.8
      cuda12:
        containerImage: ghcr.io/microsoft/mscclpp/mscclpp:base-dev-cuda12.2

  container:
    image: $[ variables['containerImage'] ]
    options: --privileged --ipc=host --gpus=all --ulimit memlock=-1:-1

  steps:
  - task: Bash@3
    name: Build
    displayName: Build
    inputs:
      targetType: 'inline'
      script: |
        mkdir build && cd build
        cmake -DCMAKE_BUILD_TYPE=Release ..
        make -j
      workingDirectory: '$(System.DefaultWorkingDirectory)'

  - task: Bash@3
    name: LockGPUClock
    displayName: Lock GPU clock frequency
    inputs:
      targetType: 'inline'
      script: |
        sudo nvidia-smi -pm 1
        for i in $(seq 0 $(( $(nvidia-smi -L | wc -l) - 1 ))); do
          sudo nvidia-smi -ac $(nvidia-smi --query-gpu=clocks.max.memory,clocks.max.sm --format=csv,noheader,nounits -i $i | sed 's/\ //') -i $i
        done
      workingDirectory: '$(System.DefaultWorkingDirectory)'

  - task: Bash@3
    name: UnitTests
    displayName: Run mscclpp unit tests
    inputs:
      targetType: 'inline'
      script: |
        ./build/test/unit_tests
      workingDirectory: '$(System.DefaultWorkingDirectory)'

  - task: Bash@3
    name: MpUnitTests
    displayName: Run mscclpp multi-process unit tests
    inputs:
      targetType: 'inline'
      script: |
        set -e
        export PATH=/usr/local/mpi/bin:$PATH
        mpirun -tag-output -np 2 ./build/test/mp_unit_tests
        mpirun -tag-output -np 4 ./build/test/mp_unit_tests
        mpirun -tag-output -np 8 ./build/test/mp_unit_tests
      workingDirectory: '$(System.DefaultWorkingDirectory)'

  - task: Bash@3
    name: PyTests
    displayName: Run pytests
    inputs:
      targetType: 'inline'
      script: |
        set -e
        export PATH=/usr/local/mpi/bin:$PATH
        mpirun -tag-output -x MSCCLPP_HOME=$(System.DefaultWorkingDirectory) -np 8 python3 -m pytest ./python/test/test_mscclpp.py -x
      workingDirectory: '$(System.DefaultWorkingDirectory)'

- job: UnitTestWithNpKit
  timeoutInMinutes: 30
  pool:
    name: mscclpp
  strategy:
    matrix:
      cuda11:
        containerImage: ghcr.io/microsoft/mscclpp/mscclpp:base-dev-cuda11.8
      cuda12:
        containerImage: ghcr.io/microsoft/mscclpp/mscclpp:base-dev-cuda12.2

  container:
    image: $[ variables['containerImage'] ]
    options: --privileged --ipc=host --gpus=all --ulimit memlock=-1:-1

  steps:
  - task: Bash@3
    name: Build
    displayName: Build
    inputs:
      targetType: 'inline'
      script: |
        mkdir build && cd build
        cmake -DCMAKE_BUILD_TYPE=Release -DNPKIT_FLAGS="-DENABLE_NPKIT -DENABLE_NPKIT_EVENT_TIME_SYNC_CPU -DENABLE_NPKIT_EVENT_TIME_SYNC_GPU -DENABLE_NPKIT_EVENT_EXECUTOR_INIT_ENTRY -DENABLE_NPKIT_EVENT_EXECUTOR_INIT_EXIT -DENABLE_NPKIT_EVENT_EXECUTOR_OP_BASE_ENTRY -DENABLE_NPKIT_EVENT_EXECUTOR_OP_BASE_EXIT" ..
        make -j
      workingDirectory: '$(System.DefaultWorkingDirectory)'

  - task: Bash@3
    name: LockGPUClock
    displayName: Lock GPU clock frequency
    inputs:
      targetType: 'inline'
      script: |
        sudo nvidia-smi -pm 1
        for i in $(seq 0 $(( $(nvidia-smi -L | wc -l) - 1 ))); do
          sudo nvidia-smi -ac $(nvidia-smi --query-gpu=clocks.max.memory,clocks.max.sm --format=csv,noheader,nounits -i $i | sed 's/\ //') -i $i
        done
      workingDirectory: '$(System.DefaultWorkingDirectory)'

  - task: Bash@3
    name: MpUnitTests
    displayName: Run mscclpp multi-process unit tests
    inputs:
      targetType: 'inline'
      script: |
        set -e
        rm -rf ./npkit_dump && mkdir ./npkit_dump && rm -rf ./npkit_output && mkdir ./npkit_output
        export PATH=/usr/local/mpi/bin:$PATH
        export NPKIT_DUMP_DIR=./npkit_dump
        mpirun -tag-output -np 2 ./build/test/mp_unit_tests --gtest_filter="ExecutorTest.TwoNodesAllreduce"
        python3 ./tools/npkit/npkit_trace_generator.py --npkit_dump_dir=./npkit_dump --npkit_event_header_path=./include/mscclpp/npkit/npkit_event.hpp --output_dir=./npkit_output
        grep -q NPKIT_EVENT_EXECUTOR_INIT_ENTRY ./npkit_output/npkit_event_trace.json
        grep -q NPKIT_EVENT_EXECUTOR_SIGNAL_ENTRY ./npkit_output/npkit_event_trace.json
        grep -q NPKIT_EVENT_EXECUTOR_WAIT_ENTRY ./npkit_output/npkit_event_trace.json
        grep -q NPKIT_EVENT_EXECUTOR_READ_REDUCE_COPY_SEND_ENTRY ./npkit_output/npkit_event_trace.json
      workingDirectory: '$(System.DefaultWorkingDirectory)'

  - task: Bash@3
    name: PyTests
    displayName: Run pytests
    inputs:
      targetType: 'inline'
      script: |
        set -e
        rm -rf ./npkit_dump && mkdir ./npkit_dump && rm -rf ./npkit_output && mkdir ./npkit_output
        export PATH=/usr/local/mpi/bin:$PATH
        export NPKIT_DUMP_DIR=./npkit_dump
        mpirun -tag-output -x MSCCLPP_HOME=$(System.DefaultWorkingDirectory) -np 8 python3 -m pytest ./python/test/test_mscclpp.py -x -k 'test_executor[allreduce.json'
        python3 ./tools/npkit/npkit_trace_generator.py --npkit_dump_dir=./npkit_dump --npkit_event_header_path=./include/mscclpp/npkit/npkit_event.hpp --output_dir=./npkit_output
        grep -q NPKIT_EVENT_EXECUTOR_INIT_ENTRY ./npkit_output/npkit_event_trace.json
        grep -q NPKIT_EVENT_EXECUTOR_SIGNAL_ENTRY ./npkit_output/npkit_event_trace.json
        grep -q NPKIT_EVENT_EXECUTOR_WAIT_ENTRY ./npkit_output/npkit_event_trace.json
        grep -q NPKIT_EVENT_EXECUTOR_READ_REDUCE_COPY_SEND_ENTRY ./npkit_output/npkit_event_trace.json
        rm -rf ./npkit_dump && mkdir ./npkit_dump && rm -rf ./npkit_output && mkdir ./npkit_output
        mpirun -tag-output -x MSCCLPP_HOME=$(System.DefaultWorkingDirectory) -np 8 python3 -m pytest ./python/test/test_mscclpp.py -x -k 'test_executor[allreduce_packet.json'
        python3 ./tools/npkit/npkit_trace_generator.py --npkit_dump_dir=./npkit_dump --npkit_event_header_path=./include/mscclpp/npkit/npkit_event.hpp --output_dir=./npkit_output
        grep -q NPKIT_EVENT_EXECUTOR_INIT_ENTRY ./npkit_output/npkit_event_trace.json
        grep -q NPKIT_EVENT_EXECUTOR_COPY_PACKET_ENTRY ./npkit_output/npkit_event_trace.json
        grep -q NPKIT_EVENT_EXECUTOR_PUT_PACKET_ENTRY ./npkit_output/npkit_event_trace.json
        grep -q NPKIT_EVENT_EXECUTOR_REDUCE_SEND_PACKET_ENTRY ./npkit_output/npkit_event_trace.json
      workingDirectory: '$(System.DefaultWorkingDirectory)'
