trigger:
- main

pr:
  branches:
    include:
    - main
  drafts: false

jobs:
- job: IntegrationTest
  displayName: Integration test
  strategy:
    matrix:
      cuda11:
        containerImage: ghcr.io/microsoft/mscclpp/mscclpp:base-dev-cuda11.8
      cuda12:
        containerImage: ghcr.io/microsoft/mscclpp/mscclpp:base-dev-cuda12.2

  pool:
    name: mscclpp
  container:
    image: $[ variables['containerImage'] ]
    options: --privileged --ipc=host --gpus=all --ulimit memlock=-1:-1

  steps:
  - task: Bash@3
    name: Build
    displayName: Build
    inputs:
      targetType: 'inline'
      script: |
        mkdir build && cd build
        cmake -DCMAKE_BUILD_TYPE=Release -DBYPASS_GPU_CHECK=ON -DUSE_CUDA=ON ..
        make -j
      workingDirectory: '$(System.DefaultWorkingDirectory)'

  - task: Bash@3
    name: LockGPUClock
    displayName: Lock GPU clock frequency
    inputs:
      targetType: 'inline'
      script: |
        sudo nvidia-smi -pm 1
        for i in $(seq 0 $(( $(nvidia-smi -L | wc -l) - 1 ))); do
          sudo nvidia-smi -ac $(nvidia-smi --query-gpu=clocks.max.memory,clocks.max.sm --format=csv,noheader,nounits -i $i | sed 's/\ //') -i $i
        done
      workingDirectory: '$(System.DefaultWorkingDirectory)'

  - task: Bash@3
    name: AllGatherTest
    displayName: Run mscclpp AllGather test
    inputs:
      targetType: 'inline'
      script: |
        set -e
        export PATH=/usr/local/mpi/bin:$PATH
        mpirun -np 8 --bind-to numa -x MSCCLPP_DEBUG=WARN ./build/test/mscclpp-test/allgather_test_perf -b 1K -e 1G -f 2 -o output.jsonl
        mpirun -np 8 --bind-to numa -x MSCCLPP_DEBUG=WARN ./build/test/mscclpp-test/allgather_test_perf -b 1K -e 1G -f 2 -k 1 -o output.jsonl
        mpirun -np 8 --bind-to numa -x MSCCLPP_DEBUG=WARN ./build/test/mscclpp-test/allgather_test_perf -b 1K -e 1G -f 2 -k 2 -o output.jsonl
        mpirun -np 8 --bind-to numa -x MSCCLPP_DEBUG=WARN ./build/test/mscclpp-test/allgather_test_perf -b 1K -e 1G -f 2 -k 3 -o output.jsonl
      workingDirectory: '$(System.DefaultWorkingDirectory)'

  - task: Bash@3
    name: SendRecvTest
    displayName: Run mscclpp SendRecv test
    inputs:
      targetType: 'inline'
      script: |
        set -e
        export PATH=/usr/local/mpi/bin:$PATH
        mpirun -np 8 --bind-to numa -x MSCCLPP_DEBUG=WARN ./build/test/mscclpp-test/sendrecv_test_perf -b 1K -e 1G -f 2 -o output.jsonl
      workingDirectory: '$(System.DefaultWorkingDirectory)'

  - task: Bash@3
    name: AllReduceTest
    displayName: Run mscclpp AllReduce test
    inputs:
      targetType: 'inline'
      script: |
        set -e
        export PATH=/usr/local/mpi/bin:$PATH
        mpirun -np 8 --bind-to numa -x MSCCLPP_DEBUG=WARN ./build/test/mscclpp-test/allreduce_test_perf -b 1K -e 1G -f 2 -o output.jsonl
        mpirun -np 8 --bind-to numa -x MSCCLPP_DEBUG=WARN ./build/test/mscclpp-test/allreduce_test_perf -b 1K -e 1G -f 2 -k 1 -o output.jsonl
        mpirun -np 8 --bind-to numa -x MSCCLPP_DEBUG=WARN ./build/test/mscclpp-test/allreduce_test_perf -b 1K -e 1G -f 2 -k 2 -o output.jsonl
        mpirun -np 8 --bind-to numa -x MSCCLPP_DEBUG=WARN ./build/test/mscclpp-test/allreduce_test_perf -b 1K -e 1G -f 2 -k 3 -o output.jsonl
        mpirun -np 8 --bind-to numa -x MSCCLPP_DEBUG=WARN ./build/test/mscclpp-test/allreduce_test_perf -b 1K -e 1G -f 2 -k 4 -o output.jsonl
        mpirun -np 8 --bind-to numa -x MSCCLPP_DEBUG=WARN ./build/test/mscclpp-test/allreduce_test_perf -b 12M -e 48M -i 3145728 2 -k 5 -o output.jsonl
        mpirun -np 8 --bind-to numa -x MSCCLPP_DEBUG=WARN ./build/test/mscclpp-test/allreduce_test_perf -b 24K -e 768K -i 24576 -k 6 -w 100 -n 100 -o output.jsonl
      workingDirectory: '$(System.DefaultWorkingDirectory)'

  - task: Bash@3
    name: AllToAll
    displayName: Run mscclpp AllToAll test
    inputs:
      targetType: 'inline'
      script: |
        set -e
        export PATH=/usr/local/mpi/bin:$PATH
        mpirun -np 8 --bind-to numa -x MSCCLPP_DEBUG=WARN ./build/test/mscclpp-test/alltoall_test_perf -b 1K -e 1G -f 2 -o output.jsonl
        mpirun -np 8 --bind-to numa -x MSCCLPP_DEBUG=WARN ./build/test/mscclpp-test/alltoall_test_perf -b 1K -e 1G -f 2 -k 1 -o output.jsonl
      workingDirectory: '$(System.DefaultWorkingDirectory)'

  - task: Bash@3
    name: CheckPerfNumber
    displayName: Check collective primitives performance
    inputs:
      targetType: 'inline'
      script: |
        set -e
        python3 test/mscclpp-test/check_perf_result.py --perf-file output.jsonl --baseline-file test/deploy/perf_ndmv4.jsonl
      workingDirectory: '$(System.DefaultWorkingDirectory)'

  - task: Bash@3
    name: PythonAllReduceBenchmark
    displayName: Python Allreduce Benchmark
    inputs:
      targetType: 'inline'
      script: |
        set -e
        export PATH=/usr/local/mpi/bin:$PATH
        python3 -m pip install .
        mpirun -tag-output -x MSCCLPP_HOME=$(System.DefaultWorkingDirectory) -np 8 python3 ./python/mscclpp_benchmark/allreduce_bench.py
      workingDirectory: '$(System.DefaultWorkingDirectory)'
